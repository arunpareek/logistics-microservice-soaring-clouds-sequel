swagger: "2.0"
info:
  version: 1.0.0
  title: "Logistics Microservice"
  description: The API for the Logistics Microservice (in the Soaring through the Clouds - The Sequel system)
  termsOfService: http://swagger.io/terms/
  contact:
    name: Lucas Jellema
    email: lucasjellema@gmail.com
    url: https://github.com/lucasjellema/logistics-microservice-soaring-clouds-sequel
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: logistics-ms.swagger.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /shipping:
    post:
      description: Submits a new shipping to execute by the Logistics service.  
      operationId: submit Shipping
      parameters:
        - name: shipping
          in: body
          description: Shipping to add to the shipping registry
          required: true
          schema:
            $ref: '#/definitions/NewShipping'
      responses:
        200:
          description: shipping response
          schema:
            $ref: '#/definitions/Shipping'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /shipping/{shippingId}:
    get:
      description: Returns details of a shipping based on the shipping identifier
      operationId: find shipping details by id
      parameters:
        - name: shippingId
          in: path
          description: Identifier of the shipping to retrieve details for
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: shipping response
          schema:
            $ref: '#/definitions/Shipping'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single shipping based on the ID supplied
      operationId: deleteShipping
      parameters:
        - name: shippingId
          in: path
          description: ID of Shipping to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: Shipping deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /shipping/{shippingId}/status:
    get:
      description: Returns status of a specific shippingbased on the shipping identifier
      operationId: retrieve shipping status by shipping id
      parameters:
        - name: shippingId
          in: path
          description: Identifier of the shipping to retrieve the current status for
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: shipping status
          schema:
            type: string
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /stock/{productIdentifier}:
    get:
      description: Returns stock situation for the indicated product (identifier)
      operationId: retrieve stock status for product
      parameters:
        - name: productIdentifier
          in: path
          description: Identifier of the product to retrieve the current stock situation for
          required: true
          type: string
      responses:
        200:
          description: stock status
          schema:
            type: string
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /health:
    get:
      description: Reports on the health of the Logistics Service 
      operationId: health check
      responses:
        200:
          description: health report
          schema:
            $ref: '#/definitions/health'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Shipping:
    allOf:
      - $ref: '#/definitions/NewShipping'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  ShippingItem:
    allOf:
      - required:
        - productIdentifier
        - itemCount
        properties:
          productIdentifier:
            type: string
          itemCount:
            type: integer
            format: int32
  NewShipping:
    properties:
      orderIdentifier:
        type: string
      nameAddressee:
        type: string
        description: "Human readable label of the person to whom the shipping is to be sent. For example: Mr. Joseph P. Miller, Lucy Diamond"
      destinatio:
          $ref: '#/definitions/Destination'
      shippingMethod:
        type: string
        enum: [premium, economy]
        description: premium to have items shipped as quickly as possible, economy to do cheapest shipping available
      desiredDeliveryData:
        type: string
        format: date
        description: "for example: deliver on birthday next month, after when I return from holiday, when I am in that hotel"
      giftWrapping:
        type: boolean
      personalMessage:
        type: string
      items:
        type: array
        items: 
          $ref: '#/definitions/ShippingItem'
    required:
      - name
  Destination:
    properties:
      street:
        type: string
      houseNumber:
        type: string
      postalCode:
        type: string
      city:
        type: string
      country:
        type: string
      items:
        type: array
        items: 
          $ref: '#/definitions/ShippingItem'
    required:
      - name
  health:
    properties:
      status:
        type: string
      uptime:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string